name: CI/CD Pipeline

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: Build and analyze (Back-Front)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ./front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: front
        run: npm ci

      - name: Run tests and generate reports
        working-directory: front
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run tests and generate JaCoCo report
        working-directory: back
        run: mvn -B clean verify

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=my_project_key
            -Dsonar.organization=my_organization_key
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.jacoco.reportPaths=back/target/site/jacoco/jacoco.xml

  front_tests_and_reports:
    name: Front Tests and Reports
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci

      - name: Run tests and generate reports
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: Tests Reports
          path: front/coverage

  build_and_push_docker_image:
    name: Build & Push Docker Image CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and push Front image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/danapp-front:latest
          context: front

      - name: Build and push Back image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/danapp-back:latest
          context: back

  back_tests_and_reports:
    name: Back-end Tests and Reports
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: back

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests and generate JaCoCo report
        run: mvn -B clean verify

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: Tests Reports
          path: back/target/site/jacoco
